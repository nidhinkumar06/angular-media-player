WEBVTT

1
00:00:00.060 --> 00:00:02.879
what's up guys so today we<font color="#CCCCCC"> are gonna</font>

2
00:00:02.879 --> 00:00:06.330
talk about<font color="#E5E5E5"> default parameters</font><font color="#CCCCCC"> in Joschka</font>

3
00:00:06.330 --> 00:00:08.580
<font color="#E5E5E5">if you want to make your</font><font color="#CCCCCC"> JavaScript base</font>

4
00:00:08.580 --> 00:00:10.170
<font color="#E5E5E5">stronger it's one of the things you need</font>

5
00:00:10.170 --> 00:00:13.139
to<font color="#E5E5E5"> understand so</font><font color="#CCCCCC"> that you can apply some</font>

6
00:00:13.139 --> 00:00:14.670
cool<font color="#E5E5E5"> tricks in</font><font color="#CCCCCC"> your code so I'm gonna</font>

7
00:00:14.670 --> 00:00:16.379
show<font color="#E5E5E5"> you how to deal</font><font color="#CCCCCC"> with the</font><font color="#E5E5E5"> optional</font>

8
00:00:16.379 --> 00:00:18.420
parameters and default parameters<font color="#CCCCCC"> now</font>

9
00:00:18.420 --> 00:00:21.180
this feature was missing in es5 it was

10
00:00:21.180 --> 00:00:23.369
introduced<font color="#E5E5E5"> in es6</font><font color="#CCCCCC"> so we're gonna look at</font>

11
00:00:23.369 --> 00:00:26.519
it how it works in detail<font color="#E5E5E5"> and welcome to</font>

12
00:00:26.519 --> 00:00:44.430
<font color="#CCCCCC">Texas tutorials alright so let's start</font>

13
00:00:44.430 --> 00:00:47.190
with<font color="#E5E5E5"> a simple function when a called add</font>

14
00:00:47.190 --> 00:00:51.300
function<font color="#E5E5E5"> and it takes two arguments a</font>

15
00:00:51.300 --> 00:00:57.710
<font color="#E5E5E5">and B and it would basically return a</font>

16
00:00:57.710 --> 00:01:02.789
plus B that's<font color="#E5E5E5"> a very simple function and</font>

17
00:01:02.789 --> 00:01:05.519
let's run it<font color="#E5E5E5"> and see what happens now if</font>

18
00:01:05.519 --> 00:01:09.450
<font color="#CCCCCC">I console.log it and let's see if</font><font color="#E5E5E5"> I</font>

19
00:01:09.450 --> 00:01:11.670
<font color="#CCCCCC">don't</font><font color="#E5E5E5"> provide any parameters what would</font>

20
00:01:11.670 --> 00:01:14.150
happen if I don't provide<font color="#E5E5E5"> any parameters</font>

21
00:01:14.150 --> 00:01:18.960
then a and<font color="#CCCCCC"> B are undefined because I did</font>

22
00:01:18.960 --> 00:01:22.409
<font color="#E5E5E5">not provide any parameters and so let's</font>

23
00:01:22.409 --> 00:01:24.799
see what<font color="#E5E5E5"> returns so if I run this it</font>

24
00:01:24.799 --> 00:01:28.560
<font color="#CCCCCC">will return me not in number and this</font><font color="#E5E5E5"> is</font>

25
00:01:28.560 --> 00:01:31.619
because<font color="#E5E5E5"> you need to handle this kind of</font>

26
00:01:31.619 --> 00:01:34.560
situation where user doesn't<font color="#E5E5E5"> provide any</font>

27
00:01:34.560 --> 00:01:36.720
parameters<font color="#E5E5E5"> and need to handle inside so</font>

28
00:01:36.720 --> 00:01:39.329
we're gonna look at how we used to<font color="#E5E5E5"> do it</font>

29
00:01:39.329 --> 00:01:41.340
in es5 first and then we're gonna look

30
00:01:41.340 --> 00:01:44.040
at how to<font color="#E5E5E5"> do in es6 so usually what you</font>

31
00:01:44.040 --> 00:01:48.899
would do here<font color="#CCCCCC"> is</font><font color="#E5E5E5"> you would</font><font color="#CCCCCC"> say if a is</font>

32
00:01:48.899 --> 00:01:55.979
let's say equal<font color="#E5E5E5"> to and define then you</font>

33
00:01:55.979 --> 00:02:00.240
would say a equal to<font color="#CCCCCC"> zero now it doesn't</font>

34
00:02:00.240 --> 00:02:02.159
<font color="#E5E5E5">always have to be</font><font color="#CCCCCC"> zero you could be</font>

35
00:02:02.159 --> 00:02:05.040
passing<font color="#CCCCCC"> strings or numbers and then</font><font color="#E5E5E5"> you</font>

36
00:02:05.040 --> 00:02:08.098
could you need<font color="#E5E5E5"> to provide a default</font>

37
00:02:08.098 --> 00:02:11.008
<font color="#E5E5E5">value accordingly</font><font color="#CCCCCC"> so what I'm doing is</font>

38
00:02:11.008 --> 00:02:13.560
if if you don't<font color="#E5E5E5"> pass any</font><font color="#CCCCCC"> per</font>

39
00:02:13.560 --> 00:02:16.470
then I'm gonna set the value<font color="#E5E5E5"> of a to be</font>

40
00:02:16.470 --> 00:02:20.580
<font color="#CCCCCC">zero</font><font color="#E5E5E5"> so if I add them it will be zero</font>

41
00:02:20.580 --> 00:02:23.910
plus<font color="#CCCCCC"> zero</font><font color="#E5E5E5"> so the answer is zero so now</font>

42
00:02:23.910 --> 00:02:26.670
if I run<font color="#CCCCCC"> this I would</font><font color="#E5E5E5"> get zero now there</font>

43
00:02:26.670 --> 00:02:29.040
is a better<font color="#E5E5E5"> way</font><font color="#CCCCCC"> to do</font><font color="#E5E5E5"> this you can</font>

44
00:02:29.040 --> 00:02:33.000
<font color="#E5E5E5">simply do this so you can say a equal</font><font color="#CCCCCC"> do</font>

45
00:02:33.000 --> 00:02:37.580
<font color="#CCCCCC">if a has a value then it's a or</font><font color="#E5E5E5"> it's</font>

46
00:02:37.580 --> 00:02:42.510
<font color="#E5E5E5">zero same thing I</font><font color="#CCCCCC"> can do</font><font color="#E5E5E5"> for B be equal</font>

47
00:02:42.510 --> 00:02:46.440
to B if it has a value<font color="#E5E5E5"> or if it's</font>

48
00:02:46.440 --> 00:02:49.350
<font color="#CCCCCC">undefined then it make it</font><font color="#E5E5E5"> zero and then</font>

49
00:02:49.350 --> 00:02:52.620
return a plus B<font color="#E5E5E5"> so now if I run</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> I</font>

50
00:02:52.620 --> 00:02:56.100
would get<font color="#E5E5E5"> zero now if I</font><font color="#CCCCCC"> provided let's</font>

51
00:02:56.100 --> 00:02:58.830
say<font color="#CCCCCC"> only one parameter</font><font color="#E5E5E5"> if I</font><font color="#CCCCCC"> provide one</font>

52
00:02:58.830 --> 00:03:02.580
parameter<font color="#E5E5E5"> that</font><font color="#CCCCCC"> means I'm providing a so</font>

53
00:03:02.580 --> 00:03:05.760
this<font color="#E5E5E5"> is how it so</font><font color="#CCCCCC"> basically doing</font><font color="#E5E5E5"> a</font><font color="#CCCCCC"> 1</font>

54
00:03:05.760 --> 00:03:09.990
plus<font color="#CCCCCC"> 0 if I want to pass only</font><font color="#E5E5E5"> B then I</font>

55
00:03:09.990 --> 00:03:11.100
don't know if you know this but<font color="#CCCCCC"> you</font><font color="#E5E5E5"> can</font>

56
00:03:11.100 --> 00:03:15.240
<font color="#E5E5E5">disturb this undefined and one that</font>

57
00:03:15.240 --> 00:03:18.239
means a is undefined B is<font color="#CCCCCC"> 1 you cannot</font>

58
00:03:18.239 --> 00:03:21.150
simply<font color="#E5E5E5"> do this it won't work</font><font color="#CCCCCC"> you would</font>

59
00:03:21.150 --> 00:03:23.459
give you an error unexpected token this

60
00:03:23.459 --> 00:03:25.820
so you need<font color="#E5E5E5"> to have an undefined here</font>

61
00:03:25.820 --> 00:03:29.600
just a trick<font color="#CCCCCC"> that if you</font><font color="#E5E5E5"> don't know this</font>

62
00:03:29.600 --> 00:03:32.820
<font color="#E5E5E5">now if I run this</font><font color="#CCCCCC"> it would say 1 all</font>

63
00:03:32.820 --> 00:03:36.570
right you can even have it more<font color="#E5E5E5"> concise</font>

64
00:03:36.570 --> 00:03:41.269
syntax<font color="#E5E5E5"> you</font><font color="#CCCCCC"> can simply do this this and</font>

65
00:03:41.269 --> 00:03:44.670
<font color="#E5E5E5">this</font><font color="#CCCCCC"> should work as well I</font><font color="#E5E5E5"> don't need</font>

66
00:03:44.670 --> 00:03:46.830
this<font color="#CCCCCC"> two lines all right so now if I run</font>

67
00:03:46.830 --> 00:03:52.019
<font color="#CCCCCC">this it</font><font color="#E5E5E5"> gives me</font><font color="#CCCCCC"> 1 and</font><font color="#E5E5E5"> if I remove the</font>

68
00:03:52.019 --> 00:03:56.820
entire argument<font color="#E5E5E5"> then I get</font><font color="#CCCCCC"> 0 which works</font>

69
00:03:56.820 --> 00:04:01.500
fine but<font color="#E5E5E5"> this is still confusing it's</font>

70
00:04:01.500 --> 00:04:05.790
not<font color="#E5E5E5"> needed so in es6 and</font><font color="#CCCCCC"> if you're using</font>

71
00:04:05.790 --> 00:04:07.830
the<font color="#CCCCCC"> latest version of browser</font><font color="#E5E5E5"> if using</font>

72
00:04:07.830 --> 00:04:09.120
<font color="#E5E5E5">Chrome you're probably using the latest</font>

73
00:04:09.120 --> 00:04:11.299
version because it updates automatically

74
00:04:11.299 --> 00:04:14.519
<font color="#E5E5E5">you can</font><font color="#CCCCCC"> do this</font><font color="#E5E5E5"> so you can simply</font><font color="#CCCCCC"> say</font>

75
00:04:14.519 --> 00:04:17.548
equal to 0 which means<font color="#CCCCCC"> if I</font><font color="#E5E5E5"> don't</font>

76
00:04:17.548 --> 00:04:21.029
<font color="#E5E5E5">provide a value and the</font><font color="#CCCCCC"> consider as 0</font>

77
00:04:21.029 --> 00:04:24.630
<font color="#E5E5E5">and then inside all I have to do is</font>

78
00:04:24.630 --> 00:04:29.040
a plus B<font color="#CCCCCC"> and I don't</font><font color="#E5E5E5"> really have to do</font>

79
00:04:29.040 --> 00:04:33.750
anything<font color="#CCCCCC"> else</font><font color="#E5E5E5"> so now if I run</font><font color="#CCCCCC"> this it</font>

80
00:04:33.750 --> 00:04:36.600
would<font color="#E5E5E5"> be zero and if I do provide a</font>

81
00:04:36.600 --> 00:04:42.270
value let's say<font color="#CCCCCC"> 1 &</font><font color="#E5E5E5"> 2 then it would be 3</font>

82
00:04:42.270 --> 00:04:46.980
<font color="#E5E5E5">now I can also do this</font><font color="#CCCCCC"> I can say this</font>

83
00:04:46.980 --> 00:04:51.030
which means equal to<font color="#CCCCCC"> 0</font><font color="#E5E5E5"> that's a default</font>

84
00:04:51.030 --> 00:04:54.030
<font color="#CCCCCC">value and B equal to</font><font color="#E5E5E5"> whatever the value</font>

85
00:04:54.030 --> 00:04:59.310
<font color="#E5E5E5">of a is so in this case if I don't</font>

86
00:04:59.310 --> 00:05:01.770
provide<font color="#E5E5E5"> anything that means equal to 0</font>

87
00:05:01.770 --> 00:05:05.490
and since<font color="#E5E5E5"> B equal</font><font color="#CCCCCC"> to a which means</font><font color="#E5E5E5"> B</font>

88
00:05:05.490 --> 00:05:09.270
also equal to 0<font color="#E5E5E5"> so I run this I would</font>

89
00:05:09.270 --> 00:05:11.250
<font color="#E5E5E5">get Europe but let's</font><font color="#CCCCCC"> have</font><font color="#E5E5E5"> I provide a</font>

90
00:05:11.250 --> 00:05:17.550
value equal<font color="#CCCCCC"> to 1 and then run it then</font>

91
00:05:17.550 --> 00:05:20.520
the answer is<font color="#E5E5E5"> 2 because since</font><font color="#CCCCCC"> I equal to</font>

92
00:05:20.520 --> 00:05:22.980
<font color="#E5E5E5">1 then also be equal to 1 since B equal</font>

93
00:05:22.980 --> 00:05:25.560
to a so it's adding<font color="#E5E5E5"> 1 plus 1 so that's</font><font color="#CCCCCC"> 1</font>

94
00:05:25.560 --> 00:05:30.750
<font color="#CCCCCC">2</font><font color="#E5E5E5"> and if you</font><font color="#CCCCCC"> do let's say undefined + 1</font>

95
00:05:30.750 --> 00:05:34.590
which<font color="#E5E5E5"> means I see what happens it's 1</font>

96
00:05:34.590 --> 00:05:37.620
because<font color="#E5E5E5"> when so in this case a equal to</font>

97
00:05:37.620 --> 00:05:41.340
0 obviously because<font color="#CCCCCC"> defined and</font><font color="#E5E5E5"> B equal</font>

98
00:05:41.340 --> 00:05:44.580
to<font color="#E5E5E5"> 8 because</font><font color="#CCCCCC"> b already I'm providing a</font>

99
00:05:44.580 --> 00:05:47.030
value it's gonna take the one I'm<font color="#E5E5E5"> giving</font>

100
00:05:47.030 --> 00:05:50.490
not the default<font color="#E5E5E5"> so that's</font><font color="#CCCCCC"> fine so it's</font>

101
00:05:50.490 --> 00:05:52.320
important<font color="#E5E5E5"> to understand</font><font color="#CCCCCC"> I now here I'm</font>

102
00:05:52.320 --> 00:05:54.180
expecting numbers that's why I am

103
00:05:54.180 --> 00:05:57.540
putting default value equal to<font color="#CCCCCC"> 0 but</font>

104
00:05:57.540 --> 00:06:00.750
<font color="#E5E5E5">let's say if I if I'm adding to</font><font color="#CCCCCC"> erase I</font>

105
00:06:00.750 --> 00:06:05.820
can<font color="#CCCCCC"> actually do this empty array and B</font>

106
00:06:05.820 --> 00:06:10.380
equal to<font color="#CCCCCC"> an empty</font><font color="#E5E5E5"> array and here instead</font>

107
00:06:10.380 --> 00:06:15.300
of<font color="#E5E5E5"> a plus B I can do spread operator</font><font color="#CCCCCC"> and</font>

108
00:06:15.300 --> 00:06:18.240
now let's say if I<font color="#CCCCCC"> don't provide any</font>

109
00:06:18.240 --> 00:06:23.160
<font color="#CCCCCC">value it</font><font color="#E5E5E5"> should add an empty array</font><font color="#CCCCCC"> plus</font>

110
00:06:23.160 --> 00:06:25.130
empty<font color="#E5E5E5"> re which would be the empty array</font>

111
00:06:25.130 --> 00:06:28.890
so I get an empty<font color="#CCCCCC"> array as if I provide</font>

112
00:06:28.890 --> 00:06:32.790
<font color="#E5E5E5">an array and</font><font color="#CCCCCC"> on this I would get</font><font color="#E5E5E5"> one</font>

113
00:06:32.790 --> 00:06:35.100
<font color="#E5E5E5">array and if I have another array let's</font>

114
00:06:35.100 --> 00:06:37.020
say<font color="#CCCCCC"> -</font><font color="#E5E5E5"> and</font>

115
00:06:37.020 --> 00:06:39.060
run<font color="#E5E5E5"> this and then I get</font><font color="#CCCCCC"> to bad loser</font>

116
00:06:39.060 --> 00:06:41.849
<font color="#E5E5E5">theory so merges to race now instead</font><font color="#CCCCCC"> of</font>

117
00:06:41.849 --> 00:06:45.720
passing this kind of<font color="#E5E5E5"> values what if I am</font>

118
00:06:45.720 --> 00:06:48.659
passing<font color="#CCCCCC"> an object</font><font color="#E5E5E5"> so let's say if I have</font>

119
00:06:48.659 --> 00:06:51.659
an<font color="#CCCCCC"> object an object literal</font><font color="#E5E5E5"> I'm gonna</font>

120
00:06:51.659 --> 00:06:55.460
just say call<font color="#E5E5E5"> it X</font><font color="#CCCCCC"> which has two values</font>

121
00:06:55.460 --> 00:07:02.879
<font color="#CCCCCC">n equal</font><font color="#E5E5E5"> to 1 and</font><font color="#CCCCCC"> B equal to</font><font color="#E5E5E5"> 2 all right</font>

122
00:07:02.879 --> 00:07:07.919
and here passing some object which which

123
00:07:07.919 --> 00:07:10.380
could be this<font color="#E5E5E5"> and so inside I would</font>

124
00:07:10.380 --> 00:07:17.610
<font color="#E5E5E5">simply do this object dot</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> plus object</font>

125
00:07:17.610 --> 00:07:19.800
<font color="#E5E5E5">dot B right</font>

126
00:07:19.800 --> 00:07:22.380
since I'm expecting it has a and B value

127
00:07:22.380 --> 00:07:27.210
now if I provide X inside<font color="#CCCCCC"> then it would</font>

128
00:07:27.210 --> 00:07:30.000
take this object<font color="#E5E5E5"> would</font><font color="#CCCCCC"> be X</font><font color="#E5E5E5"> and then it</font>

129
00:07:30.000 --> 00:07:33.810
would do X dot<font color="#E5E5E5"> a plus X dot B so which</font>

130
00:07:33.810 --> 00:07:36.930
<font color="#E5E5E5">would</font><font color="#CCCCCC"> be</font><font color="#E5E5E5"> 3 if I run this I get 3 which</font>

131
00:07:36.930 --> 00:07:41.430
works but here what if I<font color="#CCCCCC"> don't provide</font>

132
00:07:41.430 --> 00:07:43.860
this<font color="#E5E5E5"> I have a problem</font><font color="#CCCCCC"> and it gives</font><font color="#E5E5E5"> me</font>

133
00:07:43.860 --> 00:07:47.219
the error actually because when I try<font color="#E5E5E5"> to</font>

134
00:07:47.219 --> 00:07:49.530
access property of the object<font color="#CCCCCC"> it's</font><font color="#E5E5E5"> not</font>

135
00:07:49.530 --> 00:07:52.740
there so it's gonna<font color="#E5E5E5"> complain</font><font color="#CCCCCC"> so let's</font>

136
00:07:52.740 --> 00:07:54.630
first do<font color="#E5E5E5"> es5 way how to deal with the</font>

137
00:07:54.630 --> 00:07:57.000
situation<font color="#E5E5E5"> so first thing you have to do</font>

138
00:07:57.000 --> 00:08:03.919
is here<font color="#E5E5E5"> I have to say if if object it's</font>

139
00:08:03.919 --> 00:08:10.380
<font color="#E5E5E5">not undefined then it's object else it's</font>

140
00:08:10.380 --> 00:08:15.029
an empty object<font color="#CCCCCC"> alright</font><font color="#E5E5E5"> and then I have</font>

141
00:08:15.029 --> 00:08:18.599
to say<font color="#E5E5E5"> let a I can create two variables</font>

142
00:08:18.599 --> 00:08:25.740
<font color="#E5E5E5">is if object has a value then it's fine</font>

143
00:08:25.740 --> 00:08:29.969
<font color="#CCCCCC">or else I'm gonna set</font><font color="#E5E5E5"> it to</font><font color="#CCCCCC"> 0</font><font color="#E5E5E5"> and same</font>

144
00:08:29.969 --> 00:08:35.549
thing<font color="#CCCCCC"> with B</font><font color="#E5E5E5"> if object has B value then</font>

145
00:08:35.549 --> 00:08:39.059
I keep B or else it's<font color="#E5E5E5"> 0 and here I would</font>

146
00:08:39.059 --> 00:08:44.550
<font color="#E5E5E5">simply do a plus B so now if I run</font><font color="#CCCCCC"> this</font>

147
00:08:44.550 --> 00:08:47.760
I would get 0<font color="#E5E5E5"> so this is sort of</font><font color="#CCCCCC"> like a</font>

148
00:08:47.760 --> 00:08:50.550
<font color="#CCCCCC">default value but this</font><font color="#E5E5E5"> is still all</font>

149
00:08:50.550 --> 00:08:53.370
thing to do if I have much giant object

150
00:08:53.370 --> 00:08:55.320
<font color="#E5E5E5">I don't want to deal with</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> so how do</font>

151
00:08:55.320 --> 00:08:58.080
I set my<font color="#CCCCCC"> default values here</font><font color="#E5E5E5"> so the</font>

152
00:08:58.080 --> 00:08:59.130
<font color="#CCCCCC">answer is very</font><font color="#E5E5E5"> simple</font>

153
00:08:59.130 --> 00:09:02.519
<font color="#CCCCCC">instead of object I can put its</font>

154
00:09:02.519 --> 00:09:06.350
definition here and here<font color="#E5E5E5"> I can say a</font>

155
00:09:06.350 --> 00:09:13.829
equal<font color="#CCCCCC"> to zero</font><font color="#E5E5E5"> and B equal to zero and I</font>

156
00:09:13.829 --> 00:09:17.430
can<font color="#E5E5E5"> simply do</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> however</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> still</font>

157
00:09:17.430 --> 00:09:20.850
<font color="#E5E5E5">won't work</font><font color="#CCCCCC"> because if I run this it will</font>

158
00:09:20.850 --> 00:09:22.980
still complain me<font color="#E5E5E5"> because here it's just</font>

159
00:09:22.980 --> 00:09:25.560
<font color="#E5E5E5">only checking setting the value</font><font color="#CCCCCC"> of</font>

160
00:09:25.560 --> 00:09:28.170
default value for<font color="#CCCCCC"> a</font><font color="#E5E5E5"> and B but not the</font>

161
00:09:28.170 --> 00:09:30.839
entire<font color="#CCCCCC"> object</font><font color="#E5E5E5"> so I have to use a D</font>

162
00:09:30.839 --> 00:09:33.690
<font color="#E5E5E5">structuring and I could say and if I</font>

163
00:09:33.690 --> 00:09:35.790
don't provide<font color="#E5E5E5"> entire object then I have</font>

164
00:09:35.790 --> 00:09:38.519
to do this<font color="#E5E5E5"> and this this step is very</font>

165
00:09:38.519 --> 00:09:40.380
important<font color="#CCCCCC"> all right so now if I</font><font color="#E5E5E5"> run this</font>

166
00:09:40.380 --> 00:09:43.410
<font color="#E5E5E5">and let me</font><font color="#CCCCCC"> just clear this</font><font color="#E5E5E5"> and if I run</font>

167
00:09:43.410 --> 00:09:47.579
this then<font color="#E5E5E5"> I get you now</font><font color="#CCCCCC"> how if I say X</font>

168
00:09:47.579 --> 00:09:51.300
then it give me<font color="#CCCCCC"> 3 so it works so this is</font>

169
00:09:51.300 --> 00:09:54.180
a nice little<font color="#E5E5E5"> trick if</font><font color="#CCCCCC"> you passing an</font>

170
00:09:54.180 --> 00:09:55.410
object you can<font color="#CCCCCC"> actually</font><font color="#E5E5E5"> pass a</font>

171
00:09:55.410 --> 00:09:57.529
definition and then you can set the

172
00:09:57.529 --> 00:10:03.060
<font color="#E5E5E5">values and I will provide all the</font>

173
00:10:03.060 --> 00:10:06.000
examples<font color="#CCCCCC"> on my</font><font color="#E5E5E5"> good side</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> provide the</font>

174
00:10:06.000 --> 00:10:10.560
link in the description so<font color="#E5E5E5"> you can play</font>

175
00:10:10.560 --> 00:10:13.500
around with<font color="#E5E5E5"> it and I hope you learned</font>

176
00:10:13.500 --> 00:10:14.910
something from this<font color="#CCCCCC"> tutorial and</font><font color="#E5E5E5"> if you</font>

177
00:10:14.910 --> 00:10:17.100
<font color="#E5E5E5">did you can help</font><font color="#CCCCCC"> three ways</font><font color="#E5E5E5"> you can</font>

178
00:10:17.100 --> 00:10:20.640
obviously<font color="#E5E5E5"> provide comment and like and</font>

179
00:10:20.640 --> 00:10:24.000
<font color="#E5E5E5">subscribe</font><font color="#CCCCCC"> and you can</font><font color="#E5E5E5"> support the</font>

180
00:10:24.000 --> 00:10:26.370
channel via a patreon<font color="#CCCCCC"> or you can</font>

181
00:10:26.370 --> 00:10:28.890
translate the video<font color="#E5E5E5"> I'll provide the</font>

182
00:10:28.890 --> 00:00:00.000
link<font color="#E5E5E5"> in the description and thank you</font>

